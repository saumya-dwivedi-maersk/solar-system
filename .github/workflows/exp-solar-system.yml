name: New Solar System Workflow
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
 
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
 
jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        nodejs_version: [18,19,20]
        operating_system: [ubuntu-latest, macos-latest]
        exclude:
          - nodejs_version: 18
            operating_system: macos-latest
    runs-on: ${{ matrix.operating_system }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.nodejs_version }}
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: Run Unit Tests
        run: npm test
      - name: Archive Test Results
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result-${{ matrix.nodejs_version }}-${{ matrix.operating_system }}
          path: test-results.xml
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        run: npm install
      - name: Run Code Coverage
        continue-on-error: true
        run: npm run coverage
      - name: Archive Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5
 
  docker:
    name: Build and Push Docker Image
    needs: [unit-testing, code-coverage]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build Docker Image
        run: |
          docker build -t solar-system:${{ github.sha }} .
      - name: Tag Docker Image
        run: |
          docker tag solar-system:${{ github.sha }} ${{ vars.DOCKERHUB_USERNAME }}/solar-system:latest
          docker tag solar-system:${{ github.sha }} ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.ref_name }}
      - name: Push Docker Image
        run: |
          docker push ${{ vars.DOCKERHUB_USERNAME }}/solar-system:latest
          docker push ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.ref_name }}
      - name: Deploy Docker Container
        run: |
          docker run -d --name solar-system -p 3000:3000 \
          -e MONGO_URI=$MONGO_URI \
          -e MONGO_USERNAME=$MONGO_USERNAME \
          -e MONGO_PASSWORD=$MONGO_PASSWORD \
          ${{ vars.DOCKERHUB_USERNAME }}/solar-system:latest

          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo $IP

          echo Testing Image URL using wget
          wget -q -o - 127.0.0.1:3000/live | grep live

